(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{471:function(e,r,n){"use strict";n.r(r);var t=n(2),s=Object(t.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"前言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),r("p",[e._v("我们继续上文来完成登录接口。我们已经完成了验证入参、验证码的验证。接下来还要完成")]),e._v(" "),r("ol",[r("li",[e._v("判断用户名是否存在、账号是否停用")]),e._v(" "),r("li",[e._v("对数据库中的密码解密进行密码验证")]),e._v(" "),r("li",[e._v("返回登录接口信息（token、refreshToken）")])]),e._v(" "),r("h2",{attrs:{id:"判断用户名是否存在-账号是否停用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#判断用户名是否存在-账号是否停用"}},[e._v("#")]),e._v(" 判断用户名是否存在，账号是否停用")]),e._v(" "),r("p",[r("strong",[e._v("router_handler/user.js")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("...\n  // 查询数据库用户信息是否存在密码是否正确\n  UsersModel.findOne({\n    where: {\n      username: username\n    }\n  }).then((result) => {\n    if (!result) {\n      /*\n       * 返回体格式\n       * code：0为成功、1为失败\n       * message：接口信息描述\n       * data：接口数据\n       */\n      return res.send({\n        code: 1,\n        message: '用户不存在',\n        data: null\n      });\n    }else if (result.status === 0) {\n      return res.send({\n        code: 1,\n        message: '帐号已停用',\n        data: ''\n      });\n    }\n...\n")])])]),r("h2",{attrs:{id:"密码验证"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#密码验证"}},[e._v("#")]),e._v(" 密码验证")]),e._v(" "),r("p",[e._v("在"),r("a",{attrs:{href:"https://juejin.cn/post/7169864906613882893",target:"_blank",rel:"noopener noreferrer"}},[e._v("手把手教你实现一个 vue3+ts+nodeJS 后台管理系统（四）"),r("OutboundLink")],1),e._v("中我们用"),r("code",[e._v("bcrypt")]),e._v("库进行密码的加密，我们再通过这个库的"),r("code",[e._v("compareSync")]),e._v("进行解密比较，继续上面的代码")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("const compareResult = bcrypt.compareSync(password,result.password);\n// 密码正确\nif(compareResult){\n   ...返回token等信息\n}else{\n  ...返回密码错误\n}\n")])])]),r("h2",{attrs:{id:"返回-token、refreshtoken"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#返回-token、refreshtoken"}},[e._v("#")]),e._v(" 返回 token、refreshToken")]),e._v(" "),r("blockquote",[r("p",[e._v("在"),r("a",{attrs:{href:"https://juejin.cn/post/7169399867184250893",target:"_blank",rel:"noopener noreferrer"}},[e._v("手把手教你实现一个 vue3+ts+nodeJS 后台管理系统（三）"),r("OutboundLink")],1),e._v("我们完成了对 token 生成、解析、验证的封装。若没有看过的建议先看看。")])]),e._v(" "),r("p",[e._v("我们先导入封装的 token 模块和对应 token 配置信息")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("// 引入封装好的token模块和配置信息\nconst { addToken, decodedToken, verifyToken } = require('../utils/token');\nconst key = require('../config/index');\n")])])]),r("p",[e._v("然后通过此模块生成 token、refreshToken 返回")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("else {\n      const compareResult = bcrypt.compareSync(password, result.password);\n      if (compareResult) {\n        // 用浏览器可识别的固定格式生成token\n        const token =\n          'Bearer ' + addToken({ id: result.user_id, username: result.username }, key.jwtSecretKey, key.secretKeyExpire);\n        // 生成长时refreshToken\n        const refreshToken = addToken(\n          { id: result.user_id, username: result.username },\n          key.jwtRefrechSecretKey,\n          key.refreshSerectKeyExpire\n        );\n        return res.send({\n          code: 0,\n          message: '登录成功',\n          data: {\n            token,\n            refreshToken\n          }\n        });\n      } else {\n        return res.send({\n          code: 1,\n          message: '密码错误',\n          data: ''\n        });\n      }\n    }\n")])])]),r("h2",{attrs:{id:"测试"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[e._v("#")]),e._v(" 测试")]),e._v(" "),r("p",[e._v("1.输入不存在的用户名")]),e._v(" "),r("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fe4a4781e1144ed1bdd28133a9d30ce9~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),r("p",[e._v("2.登录成功")]),e._v(" "),r("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6ee08f5743204599a15ebc2a76257470~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),r("h2",{attrs:{id:"刷新-token"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#刷新-token"}},[e._v("#")]),e._v(" 刷新 token")]),e._v(" "),r("p",[e._v("登录接口已经完成了，但是当 token 过期的时候。前端会拿着 refreshToken 来刷新 token（对 token 进行延时）。我们来完成一下这个操作。")]),e._v(" "),r("h3",{attrs:{id:"添加路由"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#添加路由"}},[e._v("#")]),e._v(" 添加路由")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("// 刷新token\nrouter.post('/refreshToken', userHandler.refreshToken);\n")])])]),r("h3",{attrs:{id:"路由回调函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#路由回调函数"}},[e._v("#")]),e._v(" 路由回调函数")]),e._v(" "),r("p",[e._v("我们先要对它输入的"),r("code",[e._v("refreshToken")]),e._v("进行验证，正确的话对它进行解码，然后再返回新的 token 和旧"),r("code",[e._v("refreshToken")]),e._v("，直至此"),r("code",[e._v("refreshToken")]),e._v("过期才是真正过期")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("/**\n * 刷新token\n */\nexports.refreshToken = (req, res) => {\n  const { refreshToken } = req.body;\n  // 验证 refreshToken 1:通过\n  let _res = verifyToken(refreshToken);\n  if (_res === 1) {\n    // 对refreshToken进行解码获得id、username\n    let { id, username } = decodedToken(refreshToken);\n    // 生成新的token\n    const token = 'Bearer ' + addToken({ id, username }, key.jwtSecretKey, key.secretKeyExpire);\n    res.send({\n      code: 0,\n      message: '获取成功',\n      data: {\n        token,\n        refreshToken\n      }\n    });\n  } else {\n    res.send({\n      code: 500,\n      message: _res.message\n    });\n  }\n};\n")])])]),r("h3",{attrs:{id:"测试-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#测试-2"}},[e._v("#")]),e._v(" 测试")]),e._v(" "),r("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/24f22f5f15b74d75a2f7958c6f91f078~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}})])}),[],!1,null,null,null);r.default=s.exports}}]);