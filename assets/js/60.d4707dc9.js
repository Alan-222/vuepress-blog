(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{466:function(e,t,n){"use strict";n.r(t);var s=n(2),r=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),t("p",[e._v("在上文中我们完成了对前后端项目的初始化，本文我们将先完成后端项目的所需准备（安装模块、创建数据库、连接数据库...），流程大致为通过"),t("code",[e._v("sequelize")]),e._v("映射数据库字段创建用户实体。")]),e._v(" "),t("h2",{attrs:{id:"创建-mysql-库表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建-mysql-库表"}},[e._v("#")]),e._v(" 创建 mysql 库表")]),e._v(" "),t("p",[e._v("作者是通过图形化管理工具 "),t("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fwww.navicat.com.cn%2F",target:"_blank",rel:"noopener noreferrer"}},[e._v("Navicat"),t("OutboundLink")],1),e._v(" 来进行数据库管理")]),e._v(" "),t("h3",{attrs:{id:"创建库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建库"}},[e._v("#")]),e._v(" 创建库")]),e._v(" "),t("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cdfe8fce55a041b688136a452597801e~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("h3",{attrs:{id:"创建表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建表"}},[e._v("#")]),e._v(" 创建表")]),e._v(" "),t("p",[e._v("这里新建查询通过 sql 语句来建表")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n​\n-- ----------------------------\n-- Table structure for users\n-- ----------------------------\nDROP TABLE IF EXISTS `users`;\nCREATE TABLE `users`  (\n  `user_id` int NOT NULL AUTO_INCREMENT COMMENT 'id唯一字段',\n  `username` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '用户名',\n  `password` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '用户密码',\n  `nickname` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '用户昵称',\n  `email` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '用户邮箱\\r\\n',\n  `user_pic` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '用户头像',\n  `status` tinyint NOT NULL DEFAULT 0 COMMENT '用户状态： 0为停用、1启用\\r\\n',\n  `create_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',\n  PRIMARY KEY (`user_id`) USING BTREE\n) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = DYNAMIC;\n​\nSET FOREIGN_KEY_CHECKS = 1;\n")])])]),t("h2",{attrs:{id:"映射数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#映射数据库"}},[e._v("#")]),e._v(" 映射数据库")]),e._v(" "),t("h3",{attrs:{id:"sequelize-介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sequelize-介绍"}},[e._v("#")]),e._v(" sequelize 介绍")]),e._v(" "),t("blockquote",[t("p",[e._v("Sequelize 是一个基于 promise 的 Node.js ORM, 目前支持 Postgres, MySQL, MariaDB, SQLite 以及 Microsoft SQL Server. 它具有强大的事务支持, 关联关系, 预读和延迟加载,读取复制等功能。")]),e._v(" "),t("p",[e._v("Sequelize 遵从 语义版本控制。 支持 Node v10 及更高版本以便使用 ES6 功能。")])]),e._v(" "),t("p",[e._v("中文文档地址： "),t("a",{attrs:{href:"https://www.sequelize.cn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sequelize 中文文档"),t("OutboundLink")],1)]),e._v(" "),t("h3",{attrs:{id:"sequelize-安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sequelize-安装"}},[e._v("#")]),e._v(" sequelize 安装")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm install sequelize@5.22.5\n")])])]),t("p",[e._v("因为使用的是 mysql 数据库，还得安装相应的数据库依赖")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm install mysql2@2.3.3\n")])])]),t("p",[e._v("再安装 moment 依赖用来填充创建时间、更新时间")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm install moment@2.29.4\n")])])]),t("h3",{attrs:{id:"连接数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#连接数据库"}},[e._v("#")]),e._v(" 连接数据库")]),e._v(" "),t("p",[e._v("1.首先创建一个 model 文件夹，主要用来建立与数据库之间的连接，相当于实体类。")]),e._v(" "),t("p",[e._v("2.然后创建 init.js 文件用来连接数据库，并填入以下内容")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const Sequelize = require('sequelize');\n// 建立连接\nconst sequelize = new Sequelize(\n  // 以下内容根据自身修改\n  'vue_ts-database', // 数据库名\n  'root', // 连接用户名\n  '123456', // 密码\n  {\n    dialect: 'mysql', // 数据库类型\n    host: '127.0.0.1', // ip\n    port: 3306, // 端口\n    define: {\n      timestamps: false // 不自动创建时间\n    },\n    timezone: '+08:00' // 东八时区\n  }\n);\n​\nmodule.exports = sequelize;\n")])])]),t("p",[e._v("3.接下来就是创建各自的实体来一一映射，例如再创建一个 users.js 文件映射数据库的 id、username...字段")]),e._v(" "),t("p",[t("strong",[e._v("model/users.js")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const Sequelize = require('sequelize');\nconst moment = require('moment');\nconst sequelize = require('./init');\n​\n// 定义表的模型 define方法第一个参数为表名，第二个参数为表字段对象\nconst UsersModel = sequelize.define('users', {\n  user_id: {\n    // 数据类型\n    type: Sequelize.INTEGER,\n    // 主键\n    primaryKey: true,\n    // 自增\n    autoIncrement: true\n  },\n  username: {\n    type: Sequelize.STRING(255)\n  },\n  nickname: {\n    type: Sequelize.STRING(255)\n  },\n  email: {\n    type: Sequelize.STRING(255)\n  },\n  password: {\n    type: Sequelize.CHAR(32)\n  },\n  user_pic: {\n    type: Sequelize.TEXT\n  },\n  status: {\n    type: Sequelize.TINYINT(4),\n    defaultValue: 0\n  },\n  update_time: {\n    type: Sequelize.DATE,\n    // 格式化日期时间戳\n    get() {\n      return this.getDataValue('update_time')\n        ? moment(this.getDataValue('update_time')).format('YYYY-MM-DD HH:mm:ss')\n        : null;\n    }\n  },\n  create_time: {\n    type: Sequelize.DATE,\n    defaultValue: Sequelize.NOW,\n    get() {\n      return moment(this.getDataValue('create_time')).format('YYYY-MM-DD HH:mm:ss');\n    }\n  }\n});\n​\n// 导出用户映射模型\nmodule.exports = UsersModel;\n")])])]),t("p",[e._v("4.通过接口测试是否连接成功，在登录路由的处理函数导入经 sequelize 模块处理后的用户映射模型例如叫 usersmodel，然后通过它判断用户数据登录")]),e._v(" "),t("p",[t("strong",[e._v("router_hander/user.js")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("/**\n * 在这里定义和用户相关的路由处理函数，供 /router/user.js 模块进行调用\n */\n// 引入用户模型\nconst UsersModel = require('../model/users');\n​\n// 登录路由的处理函数\nexports.login = (req, res) => {\n  const username = req.body.username;\n  const password = req.body.password;\n  // 查询数据库用户信息是否存在密码是否正确\n  UsersModel.findOne({\n    where: {\n      username: username\n    }\n  }).then((result) => {\n    if (!result) {\n      /*\n       * 返回体格式\n       * code：0为成功、1为失败\n       * message：接口返回信息描述\n       * data：接口数据\n       */\n      return res.send({\n        code: 1,\n        message: '用户不存在',\n        data: null\n      });\n    } else {\n      if (password !== result.password) {\n        return res.send({\n          code: 1,\n          message: '密码错误',\n          data: null\n        });\n      } else {\n        res.send({\n          code: 0,\n          message: '登录成功',\n          data: result\n        });\n      }\n    }\n  });\n};\n")])])]),t("p",[e._v("5.启动项目，先在数据库添加一条测试数据，然后通过 postman 来测试")]),e._v(" "),t("p",[t("strong",[e._v("启动项目")])]),e._v(" "),t("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0fbc0f89f88f4ef89d572f702d53af62~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("p",[t("strong",[e._v("数据库信息")])]),e._v(" "),t("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/26738cbdf0bd4bd3817c441643cbb0c6~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("p",[t("strong",[e._v("postman 测试")])]),e._v(" "),t("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8595a8678317441fb5e0e36299db30f5~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("p",[e._v("可以看到测试成功，当然这里仅作测试使用。这里不可能在数据库存储明文密码，接口返回明文密码。")])])}),[],!1,null,null,null);t.default=r.exports}}]);