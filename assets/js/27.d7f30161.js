(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{433:function(a,s,t){"use strict";t.r(s);var e=t(2),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[a._v("#")]),a._v(" 前言")]),a._v(" "),s("p",[a._v("前面我们通过元素名的方式去编写"),s("code",[a._v("css")]),a._v("的代码，但这样的话相同元素一多起来可能会出现非预期的元素都是相同样式的结果。想要针对某个特定元素编写样式的，有一种方式是通过类（"),s("code",[a._v("class")]),a._v("）来进行，当然还有很多方式，本文只介绍几种，下面我们来看看。")]),a._v(" "),s("h2",{attrs:{id:"确定样式的几种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#确定样式的几种方式"}},[a._v("#")]),a._v(" 确定样式的几种方式")]),a._v(" "),s("h3",{attrs:{id:"一、类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、类"}},[a._v("#")]),a._v(" 一、类")]),a._v(" "),s("p",[a._v("类是一种比元素名更具体的概念。我们在元素标签中加上类名"),s("code",[a._v("class")])]),a._v(" "),s("p",[a._v("就能够定义一个比元素标签更为具体的“选择”，收窄我们的选择范围，从而使此元素标签被我们选择到。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<h1>Hello World</h1>\n<h1 class="special">Hello World</h1>\n')])])]),s("p",[a._v("再编写元素"),s("code",[a._v("h1")]),a._v("和类"),s("code",[a._v("specail")]),a._v("的"),s("code",[a._v("css")]),a._v("来看看会不会有什么不同。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("h1 {\n    color: red;\n}\n/* 相比元素名类名前用英文句号.来进行定义 */\n.special {\n    color: blue;\n}\n")])])]),s("h4",{attrs:{id:"效果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#效果"}},[a._v("#")]),a._v(" 效果")]),a._v(" "),s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c23ea3c00e50477793c47ea5154bef3a~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),a._v(" "),s("p",[a._v("可以看到我们通过"),s("code",[a._v("specia")]),a._v("l 类名选择到了第二个"),s("code",[a._v("h1")]),a._v("元素，当然这也有类的优先级会比元素名高的原因，这些后文再来了解。")]),a._v(" "),s("h3",{attrs:{id:"二、选择符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、选择符"}},[a._v("#")]),a._v(" 二、选择符")]),a._v(" "),s("p",[a._v("使用类名是很好，但当我们元素一多它可能就不是一个好选择，因为你要在每个元素都定义"),s("code",[a._v("class")]),a._v("，略显繁琐。但通过"),s("code",[a._v("html")]),a._v("标签的结构我们可以知道"),s("code",[a._v("html")]),a._v("标签是有父子、兄弟的关系的，这样的话选择符就能发挥作用了。")]),a._v(" "),s("h4",{attrs:{id:"包含选择符-a-b"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#包含选择符-a-b"}},[a._v("#")]),a._v(" 包含选择符：A B")]),a._v(" "),s("p",[a._v("包含选择符让 A 元素的所有后代 B 都能被选择到")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("p em{\n   color:red\n}\n")])])]),s("h4",{attrs:{id:"相邻选择符-a-b"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相邻选择符-a-b"}},[a._v("#")]),a._v(" 相邻选择符：A+B")]),a._v(" "),s("p",[a._v("相邻选择符选择相同层级的所有在 A 之后紧邻 A 的 B 元素")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("p+em{\n   color:red\n}\n")])])]),s("h3",{attrs:{id:"三、状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、状态"}},[a._v("#")]),a._v(" 三、状态")]),a._v(" "),s("p",[a._v("最后我们通过状态来选择某个元素，直观来说超链接是拥有点击前、鼠标悬浮、点击时、点击后这几种状态的。如此一来我们的选择便有了更多的余地。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("a:link{color:red}\na:hover{color:grey}\na:active{color:pink}\na:visited{color:yellow}\n")])])]),s("p",[a._v("如上便设置了四个状态对应的颜色")]),a._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),s("p",[a._v("本文我们多学习了几种确定样式的手段，下文将会针对"),s("code",[a._v("css")]),a._v("如何在浏览器上运行进行讲解")])])}),[],!1,null,null,null);s.default=r.exports}}]);