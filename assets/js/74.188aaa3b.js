(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{480:function(e,t,s){"use strict";s.r(t);var r=s(2),a=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),t("p",[e._v("本系列将通过前端 vue + ts 加后端 nodeJS 的技术框架从零实现一个后台管理系统，作者主业是 web 前端开发小白，刚刚学完 vue3 与 nodeJS 技术不久，因此本系统算是一个练手项目，参考了一些项目的写法，可能有一些做的不够好的地方，欢迎讨论！")]),e._v(" "),t("h2",{attrs:{id:"技术栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#技术栈"}},[e._v("#")]),e._v(" 技术栈")]),e._v(" "),t("h3",{attrs:{id:"前端"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前端"}},[e._v("#")]),e._v(" 前端")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("语言："),t("code",[e._v("typeScript")])])]),e._v(" "),t("li",[t("p",[e._v("前端框架："),t("code",[e._v("vue 3")])])]),e._v(" "),t("li",[t("p",[e._v("脚手架："),t("code",[e._v("vite")])])]),e._v(" "),t("li",[t("p",[e._v("路由："),t("code",[e._v("vue-router 4")])])]),e._v(" "),t("li",[t("p",[e._v("状态管理："),t("code",[e._v("vuex 4")])])]),e._v(" "),t("li",[t("p",[e._v("CSS 预编译处理："),t("code",[e._v("sass")])])]),e._v(" "),t("li",[t("p",[e._v("网络请求工具："),t("code",[e._v("axios")])])]),e._v(" "),t("li",[t("p",[e._v("前端 UI 框架："),t("code",[e._v("element-plus 2")])])])]),e._v(" "),t("h3",{attrs:{id:"后端"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#后端"}},[e._v("#")]),e._v(" 后端")]),e._v(" "),t("ul",[t("li",[e._v("语言："),t("code",[e._v("javaScript")])]),e._v(" "),t("li",[e._v("运行环境："),t("code",[e._v("node.js 14")])]),e._v(" "),t("li",[e._v("后端开发框架："),t("code",[e._v("express 4")])]),e._v(" "),t("li",[e._v("数据库："),t("code",[e._v("mysql")])]),e._v(" "),t("li",[e._v("缓存数据库："),t("code",[e._v("redis")])]),e._v(" "),t("li",[e._v("数据库映射模块（ORM）："),t("code",[e._v("sequelize 5")])])]),e._v(" "),t("h2",{attrs:{id:"前端项目构建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前端项目构建"}},[e._v("#")]),e._v(" 前端项目构建")]),e._v(" "),t("p",[e._v("先附上本人的 node 及 npm 版本")]),e._v(" "),t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ab7efbf1c757440b8bce05a6099b4c17~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("h3",{attrs:{id:"前端项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前端项目"}},[e._v("#")]),e._v(" 前端项目")]),e._v(" "),t("p",[e._v("安装，选择 vue、typeScript")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm create vite@latest\ncd vue_ts-app\nnpm install\nnpm run dev\n")])])]),t("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/35d92c54d2144e5f97d9640e4de25b17~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("p",[e._v("运行项目")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm run dev\n")])])]),t("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/12a843725a81487aadb1e113bca0de1d~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("p",[e._v("输入网址出现这个页面说明创建成功")]),e._v(" "),t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e7f424c2464540c797ec4bc6a3a2d630~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("p",[e._v("用"),t("code",[e._v("vscode")]),e._v("打开查看目录结构")]),e._v(" "),t("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/94f9602b02254535a5a2ad530e543404~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("p",[e._v("项目就创建完成了，在 vscode 打开并在终端运行命令"),t("code",[e._v("npm run dev")])]),e._v(" "),t("blockquote",[t("p",[e._v("此时不会自动在浏览器打开，若需要得在"),t("code",[e._v("package.json")]),e._v("文件 script 字段的 dev 属性值后添加--open")])]),e._v(" "),t("h4",{attrs:{id:"安装系统所需依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装系统所需依赖"}},[e._v("#")]),e._v(" 安装系统所需依赖")]),e._v(" "),t("p",[t("strong",[e._v("1.将@作为"),t("code",[e._v("src")]),e._v("文件夹的别名")])]),e._v(" "),t("p",[e._v("安装所需 ts 类型")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm install @types/node --save-dev\n")])])]),t("p",[e._v("在"),t("code",[e._v("vite.config.ts")]),e._v("下添加如下配置")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\nimport { resolve } from 'path';\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [vue()],\n  resolve: {\n    alias: {\n      '@': resolve(__dirname, 'src') // 路径别名\n    },\n    extensions: ['.js', '.json', '.ts', '.vue'] // 使用路径别名时想要省略的后缀名，可以自己 增减\n  }\n});\n")])])]),t("p",[e._v("在"),t("code",[e._v("tsconfig.json")]),e._v("的"),t("code",[e._v("compilerOptions")]),e._v("配置项下添加如下配置属性")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('"baseUrl": ".",\n// 用于设置解析非相对模块名称的基本目录，相对模块不会受到baseUrl的影响\n"paths": {\n  // 用于设置模块名到基于baseUrl的路径映射\n  "@/*": ["src/*"]\n}\n')])])]),t("p",[t("strong",[e._v("2.安装所需依赖")])]),e._v(" "),t("ul",[t("li",[t("p",[e._v("一. vuex")])]),e._v(" "),t("li",[t("p",[e._v("1.安装")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm install vuex@4.0.2\n")])])]),t("p",[e._v("2.创建 store 文件夹及配置文件"),t("code",[e._v("index.ts")]),e._v("，并导入以下配置")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    count: 0\n  },\n  mutations: {\n    SET_COUNT: (state, count) => {\n      count += 1;\n      state.count = count;\n    }\n  },\n  actions: {},\n  getters: {}\n});\n")])])]),t("p",[e._v("3.在 main.ts 中引入")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import { createApp } from 'vue';\nimport './style.css';\nimport store from '@/store/index';\nimport App from '@/App.vue';\n\nconst app = createApp(App);\napp.use(store).mount('#app');\n")])])]),t("p",[e._v("4.创建测试页面并测试（test.vue）")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("<template>\n  <div>\n    count:{{ count }}\n    <button @click=\"addCount\">count++</button>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport { useStore } from 'vuex';\n// 导入store\nconst store = useStore()\n// 将count赋值\nconst count = ref(store.state.count)\n// count增加方法\nfunction addCount() {\n  count.value++\n  store.commit('SET_COUNT', count.value)\n}\n<\/script>\n\n<style scoped>\n\n</style>\n")])])]),t("p",[e._v("App.vue")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("<template>\n  <Test />\n</template>\n<script setup lang=\"ts\">\nimport Test from './components/test.vue';\n\n<\/script>\n\n<style scoped>\n\n</style>\n")])])]),t("p",[e._v("可以看到功能没问题")])])]),e._v(" "),t("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e80bf6e1122f4891928c2384cd033077~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("ul",[t("li",[t("p",[e._v("二. vue-router")])]),e._v(" "),t("li",[t("p",[e._v("1.安装")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm install vue-router@4\n")])])]),t("p",[e._v("2.创建 router 文件夹添加配置文件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import { createRouter, createWebHashHistory, RouteRecordRaw } from 'vue-router';\n\nconst routes: RouteRecordRaw[] = [\n  {\n    path: '/',\n    name: 'Test',\n    component: () => import('@/components/test.vue') // 注意这里要带上 文件后缀.vue\n  }\n];\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n});\n\nexport default router;\n")])])]),t("p",[e._v("3.在 main.ts 文件中导入")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import router from '@/router/index'\n// 在app后添加\napp.use(router)\n")])])]),t("p",[e._v("4.将 App.vue 修改为路由视图")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<template>\n  <router-view></router-view>\n</template>\n<script setup lang="ts">\n\n<\/script>\n\n<style scoped>\n\n</style>\n\n')])])]),t("p",[e._v("5.测试发现 url 改变")])])]),e._v(" "),t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/79629bb610974de4902306be485aed87~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("ul",[t("li",[t("p",[e._v("三. element-plus")])]),e._v(" "),t("li",[t("p",[e._v("1.安装")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm install element-plus@2 --save\nnpm install -D unplugin-vue-components unplugin-auto-import\n")])])]),t("p",[e._v("2.在 vite.config.ts 添加如下配置")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// vite.config.ts\nimport { defineConfig } from 'vite'\nimport vue from '@vitejs/plugin-vue';\nimport { resolve } from 'path';\nimport AutoImport from 'unplugin-auto-import/vite'\nimport Components from 'unplugin-vue-components/vite'\nimport { ElementPlusResolver } from 'unplugin-vue-components/resolvers'\n\nexport default defineConfig({\n  // ...\n  plugins: [\n    // ...\n    AutoImport({\n      resolvers: [ElementPlusResolver()],\n    }),\n    Components({\n      resolvers: [ElementPlusResolver()],\n    }),\n  ],\n  // ...\n})\n")])])]),t("p",[e._v("3.volor 支持")]),e._v(" "),t("p",[e._v("如果你使用 volar，可在"),t("code",[e._v("tsconfig.json")]),e._v(" 中通过 "),t("code",[e._v("compilerOptions.type")]),e._v(" 指定全局组件类型")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('// tsconfig.json\n{\n  "compilerOptions": {\n    // ...\n    "types": ["element-plus/global"]\n  }\n}\n')])])]),t("p",[e._v("4.测试")]),e._v(" "),t("p",[e._v("将 test.vue 的 button 修改")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<ElButton @click="addCount">count++</ElButton>\n')])])])])]),e._v(" "),t("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c4fd93e7b74a41d68dda323c4a30ca09~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("ul",[t("li",[t("p",[e._v("四.axios 封装")])]),e._v(" "),t("li",[t("p",[e._v("1.安装")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm install axios\n")])])]),t("p",[e._v("2.添加 utils 文件夹并添加 http.ts 配置文件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import Axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from 'axios';\n\nconst BASE_URL = ''; //请求接口url 如果不配置 则默认访问链接地址\nconst TIME_OUT = 20000; // 接口超时时间\n\nconst instance = Axios.create({\n  baseURL: BASE_URL,\n  timeout: TIME_OUT\n});\n\n// 添加请求拦截器\ninstance.interceptors.request.use(\n  (config: AxiosRequestConfig) => {\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// 添加响应拦截器\ninstance.interceptors.response.use(\n  (response: AxiosResponse) => {\n    console.log(response);\n    return response.data;\n  },\n  (error: AxiosError) => {\n    return Promise.reject(error);\n  }\n);\n\nexport default instance;\n")])])]),t("p",[e._v("3.在 utils 文件夹下创建 api 文件夹备用")])])]),e._v(" "),t("p",[e._v("前端项目的初始化到这里就结束了")]),e._v(" "),t("h3",{attrs:{id:"后端项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#后端项目"}},[e._v("#")]),e._v(" 后端项目")]),e._v(" "),t("h4",{attrs:{id:"初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[e._v("#")]),e._v(" 初始化")]),e._v(" "),t("p",[e._v("1.创建一个新文件夹 vue_ts-server")]),e._v(" "),t("p",[e._v("2.用 vscode 打开并执行命令初始化文件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm init -y\n")])])]),t("h4",{attrs:{id:"安装-express"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-express"}},[e._v("#")]),e._v(" 安装 express")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm i express@4.17.1\n")])])]),t("h4",{attrs:{id:"_1-1-在根目录创建项目入口文件-app-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-在根目录创建项目入口文件-app-js"}},[e._v("#")]),e._v(" 1.1 在根目录创建项目入口文件 app.js")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 导入 express 模块\nconst express = require('express')\n// 创建 express 的服务器实例\nconst app = express()\n\n// write your code here...\n\n// 调用 app.listen 方法，指定端口号并启动web服务器\napp.listen(9999, function () {\n  console.log('api server running at http://127.0.0.1:9999')\n})\n")])])]),t("h5",{attrs:{id:"_1-2-配置-cors-跨域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-配置-cors-跨域"}},[e._v("#")]),e._v(" 1.2 配置 cors 跨域")]),e._v(" "),t("ol",[t("li",[e._v("运行如下的命令，安装 "),t("code",[e._v("cors")]),e._v(" 中间件：")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm i cors@2.8.5\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[e._v("在 "),t("code",[e._v("app.js")]),e._v(" 中导入并配置 "),t("code",[e._v("cors")]),e._v(" 中间件（app.listen()之前）：")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 导入 cors 中间件\nconst cors = require('cors')\n// 将 cors 注册为全局中间件\napp.use(cors())\n")])])]),t("h4",{attrs:{id:"_1-3-配置解析表单数据的中间件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-配置解析表单数据的中间件"}},[e._v("#")]),e._v(" 1.3 配置解析表单数据的中间件")]),e._v(" "),t("ol",[t("li",[e._v("安装"),t("code",[e._v("body-parser")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm install body-parser@1.20.1\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[e._v("在 app.js 中添加配置")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const bodyParser = require('body-parser');\napp.use(\n  bodyParser.urlencoded({\n    extended: true\n  })\n);\n\napp.use(bodyParser.json());\n")])])]),t("h4",{attrs:{id:"_1-4-初始化路由相关的文件夹"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-初始化路由相关的文件夹"}},[e._v("#")]),e._v(" 1.4 初始化路由相关的文件夹")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("在项目根目录中，新建"),t("code",[e._v("router")]),e._v("文件夹，用来存放所有的路由模块")]),e._v(" "),t("blockquote",[t("p",[e._v("路由模块中，只存放客户端的请求与处理函数之间的映射关系")])])]),e._v(" "),t("li",[t("p",[e._v("在项目根目录中，新建"),t("code",[e._v("router_handler")]),e._v("文件夹，用来存放所有的路由处理函数模块")]),e._v(" "),t("blockquote",[t("p",[e._v("路由处理函数模块中，专门负责存放每个路由对应的处理函数")])])])]),e._v(" "),t("h4",{attrs:{id:"_1-5-初始化用户路由模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-初始化用户路由模块"}},[e._v("#")]),e._v(" 1.5 初始化用户路由模块")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("在 "),t("code",[e._v("router")]),e._v(" 文件夹中，新建 "),t("code",[e._v("user.js")]),e._v(" 文件，作为用户的路由模块，并初始化代码如下：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const express = require('express')\n// 创建路由对象\nconst router = express.Router()\n\n// 登录\nrouter.post('/login', (req, res) => {\n  res.send('login OK')\n})\n\n// 将路由对象共享出去\nmodule.exports = router\n")])])])]),e._v(" "),t("li",[t("p",[e._v("在 "),t("code",[e._v("app.js")]),e._v(" 中，导入并使用 "),t("code",[e._v("用户路由模块")]),e._v(" ：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 导入并注册用户路由模块\nconst userRouter = require('./router/user')\napp.use('/user', userRouter)\n")])])])])]),e._v(" "),t("h4",{attrs:{id:"_1-6-抽离用户路由模块中的处理函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-抽离用户路由模块中的处理函数"}},[e._v("#")]),e._v(" 1.6 抽离用户路由模块中的处理函数")]),e._v(" "),t("blockquote",[t("p",[e._v("目的：为了保证 "),t("code",[e._v("路由模块")]),e._v(" 的纯粹性，所有的 "),t("code",[e._v("路由处理函数")]),e._v("，必须抽离到对应的 "),t("code",[e._v("路由处理函数模块")]),e._v(" 中")])]),e._v(" "),t("ol",[t("li",[t("p",[e._v("在 "),t("code",[e._v("/router_handler/user.js")]),e._v(" 中，使用 "),t("code",[e._v("exports")]),e._v(" 对象，分别向外共享如下两个 "),t("code",[e._v("路由处理函数")]),e._v(" ：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("/**\n * 在这里定义和用户相关的路由处理函数，供 /router/user.js 模块进行调用\n */\n\n// 登录的处理函数\nexports.login = (req, res) => {\n  res.send('login OK')\n}\n")])])])]),e._v(" "),t("li",[t("p",[e._v("将 "),t("code",[e._v("/router/user.js")]),e._v(" 中的代码修改为如下结构：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const express = require('express')\nconst router = express.Router()\n\n// 导入用户路由处理函数模块\nconst userHandler = require('../router_handler/user')\n\n// 登录\nrouter.post('/login', userHandler.login)\n\nmodule.exports = router\n")])])])])]),e._v(" "),t("h4",{attrs:{id:"_1-6-在-postman-中测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-在-postman-中测试"}},[e._v("#")]),e._v(" 1.6 在 postman 中测试")]),e._v(" "),t("p",[e._v("1.首先在终端中输入运行命令")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("node app.js\n")])])]),t("p",[e._v("2.在 postman 中测试成功")]),e._v(" "),t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a6620e4fd6ed420c8555b6ecd1e8813c~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("h2",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://juejin.cn/post/7069744005700911140#comment",target:"_blank",rel:"noopener noreferrer"}},[e._v("一个基于 vite 构建的 vue3+pinia+ts+elementUI plus 的初始化开箱即用的项目模版"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=a.exports}}]);