(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{490:function(e,t,s){"use strict";s.r(t);var a=s(2),n=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),t("p",[e._v("封装完页面通用模块后，现在我们正式进入页面的构建。搜索栏、按钮栏和表格就不再多做赘述了，都大同小异只是传入参数不同。我们主要来讲按钮的功能。可以分为以下两类")]),e._v(" "),t("ul",[t("li",[e._v("弹窗表单类：通用的新增、编辑，还有特定的重置用户密码、分配角色权限等")]),e._v(" "),t("li",[e._v("确认弹框类：删除")])]),e._v(" "),t("h2",{attrs:{id:"用户管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#用户管理"}},[e._v("#")]),e._v(" 用户管理")]),e._v(" "),t("p",[e._v("现在主要把三个模块的按钮功能都完善下")]),e._v(" "),t("h3",{attrs:{id:"搜索栏按钮"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搜索栏按钮"}},[e._v("#")]),e._v(" 搜索栏按钮")]),e._v(" "),t("p",[e._v("之前搜索栏组件中父组件传递了一个"),t("code",[e._v("getSearchParams")]),e._v("的函数获取搜索参数，如下：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 搜索事件\nconst onFinish = (values) => {\n getSearchParams(values)\n}\n// 重置事件\nconst onReset = () => {\n form.resetFields()\n getSearchParams({})\n}\n")])])]),t("h4",{attrs:{id:"搜索参数修改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搜索参数修改"}},[e._v("#")]),e._v(" 搜索参数修改")]),e._v(" "),t("p",[e._v("由于表格进行了封装，我们在父组件中传递的事件及参数要修改下。"),t("code",[e._v("searchParams")]),e._v("参数弃用，统一用传给表格的"),t("code",[e._v("requestParam")]),e._v("参数")]),e._v(" "),t("p",[t("strong",[e._v("src/pages/System/User/index.jsx")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("​\n// 请求参数重置、修改\nconst onParamChange = (searchParams) => {\nif (!Object.keys(searchParams).length)\n  setRequestParam({\n    ...requestParam,\n    username: undefined,\n    nickname: undefined,\n    email: undefined,\n    status: undefined\n  })\nelse setRequestParam({ ...requestParam, ...searchParams })\n}\n​\nreturn(\n  <>\n    <SearchBar formItemList={formItemList} getSearchParams={onParamChange} />\n  </>\n)\n")])])]),t("p",[e._v("这样就能正常进行搜索与重置的操作")]),e._v(" "),t("h3",{attrs:{id:"按钮栏按钮与表格操作列按钮"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#按钮栏按钮与表格操作列按钮"}},[e._v("#")]),e._v(" 按钮栏按钮与表格操作列按钮")]),e._v(" "),t("p",[e._v("按钮栏目前只有新增、批量删除两个按钮，大家有需要的话可自行扩展。")]),e._v(" "),t("p",[e._v("表格操作列有编辑、删除、重置密码按钮，主要是针对表格当前行的数据进行操作。")]),e._v(" "),t("h4",{attrs:{id:"新增、编辑、重置密码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#新增、编辑、重置密码"}},[e._v("#")]),e._v(" 新增、编辑、重置密码")]),e._v(" "),t("p",[e._v("这部分功能的话还是采用类似个人中心的弹窗+表单的模式。我们先完成表单组件。")]),e._v(" "),t("p",[e._v("我们先来梳理一下各个按钮功能需要的表单项")]),e._v(" "),t("ul",[t("li",[e._v("新增：用户名、角色、状态、密码、确认密码")]),e._v(" "),t("li",[e._v("编辑：用户名、角色、状态")]),e._v(" "),t("li",[e._v("重置密码：旧密码、密码、确认密码")])]),e._v(" "),t("p",[e._v("为了区分功能，需要在父组件传入"),t("code",[e._v("editType")]),e._v("字段指明功能类型，例如新增：add。编辑、重置密码时还需传入操作的用户 id。现在我们来梳理一下表单组件需要的字段。")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("传入字段")]),e._v(" "),t("th",[e._v("是否必填")]),e._v(" "),t("th",[e._v("字段名称")]),e._v(" "),t("th",[e._v("类型")]),e._v(" "),t("th",[e._v("字段说明")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[t("code",[e._v("editType")])]),e._v(" "),t("td",[e._v("必填")]),e._v(" "),t("td",[e._v("编辑类型")]),e._v(" "),t("td",[e._v("String")]),e._v(" "),t("td",[e._v("表示当前弹窗功能")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("user_id")])]),e._v(" "),t("td",[e._v("选填")]),e._v(" "),t("td",[e._v("用户 ID")]),e._v(" "),t("td",[e._v("String")]),e._v(" "),t("td",[e._v("编辑、重置唯一标识")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("dict")])]),e._v(" "),t("td",[e._v("选填")]),e._v(" "),t("td",[e._v("字典")]),e._v(" "),t("td",[e._v("Object")]),e._v(" "),t("td",[e._v("表单所用到的所有字典值")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("onRefreshTable")])]),e._v(" "),t("td",[e._v("必填")]),e._v(" "),t("td",[e._v("表格刷新事件")]),e._v(" "),t("td",[e._v("Function")]),e._v(" "),t("td",[e._v("使父组件表格刷新")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("toggleModalStatus")])]),e._v(" "),t("td",[e._v("必填")]),e._v(" "),t("td",[e._v("弹窗关闭事件")]),e._v(" "),t("td",[e._v("Function")]),e._v(" "),t("td",[e._v("使外层弹窗关闭")])])])]),e._v(" "),t("p",[e._v("然后就可以根据传入的"),t("code",[e._v("editType")]),e._v("显示对应的表单项，部分表单项如下图。")]),e._v(" "),t("p",[t("strong",[e._v("src/pages/System/User/components/UserEditForm.jsx")])]),e._v(" "),t("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/638a2954ef354f9b96b0f6263b7d6cc3~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1321&h=822&s=115908&e=png&b=282c34",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("h5",{attrs:{id:"获取表单项数据和编辑回显值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获取表单项数据和编辑回显值"}},[e._v("#")]),e._v(" 获取表单项数据和编辑回显值")]),e._v(" "),t("p",[e._v("那么当我们下拉框或者单选框组需要数据时，还有编辑时需要回显值时，就需要在"),t("code",[e._v("useEffect")]),e._v("钩子函数中进行。注意依赖项是"),t("code",[e._v("editType")]),e._v("和"),t("code",[e._v("user_id")]),e._v("，即当编辑类型和用户 id 改变时重新请求。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("  // 表单数据\n  const [allRoleArr, setAllRoleArr] = useState([])\n  useEffect(() => {\n    // 进来先重置表单\n    form && form.resetFields()\n    // 请求角色选项数组\n    if (editType !== 'reset' && !allRoleArr.length) {\n      const fetchAllRole = async () => {\n        const { data } = await roleApi.manage.queryAll()\n        const filterArr = data.map((item) => ({ role_id: item.role_id, role_name: item.role_name }))\n        setAllRoleArr(filterArr)\n      }\n      fetchAllRole()\n    }\n    // 请求当前用户id的信息\n    if (editType === 'edit') {\n      const fetchCurrentData = async () => {\n        const {\n          data: { username, roles, status }\n        } = await userApi.manage.queryById(user_id)\n        // 回显值\n        form.setFieldsValue({\n          username,\n          role_ids: roles.map((item) => item.role_id),\n          status\n        })\n      }\n      fetchCurrentData()\n    }\n  }, [editType, user_id])\n")])])]),t("h5",{attrs:{id:"取消、提交按钮事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#取消、提交按钮事件"}},[e._v("#")]),e._v(" 取消、提交按钮事件")]),e._v(" "),t("p",[e._v("取消按钮就是关闭弹窗，调用一下父组件传递的弹窗关闭事件即可。提交按钮需要根据编辑类型，请求对应的接口，然后当非重置密码时需要刷新一下父组件表格（传入的刷新方法"),t("code",[e._v("onRefreshTable")]),e._v("，这里设置传入空对象即为重置表格，即将搜索数据置空）。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 取消按钮事件\nconst onCancel = () => {\n  toggleModalStatus(false)\n}\n// 提交按钮事件\nconst onFinish = async (value) => {\n// 根据不同类型编辑类型，请求不同接口\n  switch (editType) {\n    case 'add':\n      await userApi.manage.add(value)\n      message.success('添加用户成功')\n      break\n    case 'edit':\n      await userApi.manage.update({ user_id, ...value })\n      message.success('修改信息成功')\n      break\n    case 'reset':\n      await userApi.manage.reset({ user_id, ...value })\n      message.success('重置密码成功')\n      break\n    default:\n      console.log(editType)\n  }\n  onCancel()\n  // 刷新表格\n  if (editType !== 'reset') onRefreshTable({})\n}\n")])])]),t("p",[e._v("然后父组件中用自定义弹窗组件包裹上述组件传入对应参数。新增时重新赋值为 add 并将 user_id 置为空，点击编辑按钮时重新赋值编辑类型为"),t("code",[e._v("edit")]),e._v("和 user_id 为当前行用户 id，重置密码与编辑类似。")]),e._v(" "),t("p",[t("strong",[e._v("src/pages/System/User/index.jsx")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("    // 功能类型\n  const [editType, setEditType] = useState()\n  // 当前行用户id\n  const [user_id, setUserId] = useState()\n  // 添加用户\n  const addRow = () => {\n    setEditType('add')\n    setUserId('')\n    toggleModalStatus(true)\n  }\n  // 弹窗显隐切换\n  const toggleModalStatus = (status) => {\n    userModalRef.current.toggleShowStatus(status)\n  }\n  ...\n  <CustomModal title=\"用户编辑\" ref={userModalRef}>\n    <UserEditForm\n      editType={editType}\n      user_id={user_id}\n      dict={{ statusDict }}\n      onRefreshTable={onParamChange}\n      toggleModalStatus={toggleModalStatus}\n    />\n  </CustomModal>\n")])])]),t("h4",{attrs:{id:"批量删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#批量删除"}},[e._v("#")]),e._v(" 批量删除")]),e._v(" "),t("p",[e._v("批量删除是按钮栏的按钮，一般是表格每行左侧有个复选框，有勾选时出现此按钮。在表格选择的配置项为"),t("code",[e._v("rowSelection")]),e._v("，里面有个"),t("code",[e._v("onChange")]),e._v("事件，我们用一个数组接收选择项，改变时重设数组即可。")]),e._v(" "),t("p",[t("strong",[e._v("src/pages/System/User/index.jsx")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 勾选的用户\nconst [selectedRowKeys, setSelectedRowKeys] = useState()\n// 选择用户\nconst rowSelection = {\n  onChange: (selectedRowKeys) => {\n    setSelectedRowKeys(selectedRowKeys)\n}\n}\n<CustomTable\n  rowSelection={{\n    type: 'checkbox',\n    ...rowSelection\n  }}\n  ...\n/>\n")])])]),t("h5",{attrs:{id:"批量删除按钮显示逻辑"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#批量删除按钮显示逻辑"}},[e._v("#")]),e._v(" 批量删除按钮显示逻辑")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('{selectedRowKeys && selectedRowKeys.length > 0 && (\n<Popconfirm title="删除用户" description="确定要删除吗？" onConfirm={() => deleteRow(selectedRowKeys)}>\n  <AuthComponent permission="system:user:del" danger>\n    批量删除\n  </AuthComponent>\n</Popconfirm>\n)}\n')])])]),t("h5",{attrs:{id:"删除方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除方法"}},[e._v("#")]),e._v(" 删除方法")]),e._v(" "),t("p",[e._v("删除方法和表格操作列删除按钮共用一个。表格删除时为字符串类型，批量删除时为数组类型")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("  // 删除\nconst deleteRow = async (user_ids) => {\n  await userApi.manage.del({ user_ids: user_ids })\n  message.success('删除成功')\n  // 重新请求表格\n  onParamChange({})\n}\n")])])]),t("h3",{attrs:{id:"最终效果"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#最终效果"}},[e._v("#")]),e._v(" 最终效果")]),e._v(" "),t("p",[t("strong",[e._v("用户管理页面")])]),e._v(" "),t("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/210de0aa34f94b2c8c8b017b03c0b086~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2559&h=1206&s=84505&e=png&b=fafafa",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("p",[t("strong",[e._v("用户管理新增功能")])]),e._v(" "),t("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ff26ff228b984341b0a7e2e85b0aa220~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2559&h=1206&s=90614&e=png&b=898989",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("h2",{attrs:{id:"角色管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#角色管理"}},[e._v("#")]),e._v(" 角色管理")]),e._v(" "),t("p",[e._v("角色管理总体与用户管理类似，表格操作列多了一个"),t("strong",[e._v("分配权限")]),e._v("的按钮，我们先完成基本的三个模块及新增、编辑、删除按钮。")]),e._v(" "),t("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/916705d5ba60457e9e9dfe3c1755aa63~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2559&h=1206&s=119225&e=png&b=898989",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("p",[e._v("然后我们着手完成"),t("strong",[e._v("分配权限")]),e._v("的功能。")]),e._v(" "),t("h3",{attrs:{id:"分配权限"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分配权限"}},[e._v("#")]),e._v(" 分配权限")]),e._v(" "),t("p",[e._v("分配权限是弹窗加弹窗内部组件。弹窗内部组件主要由树形控件"),t("code",[e._v("Tree")]),e._v("构成，我们先罗列一下我们需要用到的 Tree`控件的属性。")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("属性")]),e._v(" "),t("th",[e._v("属性类型")]),e._v(" "),t("th",[e._v("属性说明")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[t("code",[e._v("checkable")])]),e._v(" "),t("td",[e._v("boolean")]),e._v(" "),t("td",[e._v("节点前添加 Checkbox 复选框")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("defaultExpandAll")])]),e._v(" "),t("td",[e._v("boolean")]),e._v(" "),t("td",[e._v("默认展开所有树节点")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("checkStrictly")])]),e._v(" "),t("td",[e._v("boolean")]),e._v(" "),t("td",[e._v("checkable 状态下节点选择完全受控（父子节点选中状态不再关联）")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("treeData")])]),e._v(" "),t("td",[e._v("array<{key, title, children, [disabled, selectable]}>")]),e._v(" "),t("td",[e._v("treeNodes 数据，如果设置则不需要手动构造 TreeNode 节点（key 在整个树范围内唯一）")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("checkedKeys")])]),e._v(" "),t("td",[e._v("string[]")]),e._v(" "),t("td",[e._v("{checked: string[], halfChecked: string[]}")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("onCheck")])]),e._v(" "),t("td",[e._v("function(checkedKeys, e:{checked: boolean, checkedNodes, node, event, halfCheckedKeys})")]),e._v(" "),t("td",[e._v("点击复选框触发")])])])]),e._v(" "),t("p",[e._v("然后我们开始封装弹窗内部组件"),t("code",[e._v("RoleAuthTree")]),e._v("。")]),e._v(" "),t("p",[e._v("步骤有三步")]),e._v(" "),t("p",[e._v("1.获取所有权限列表，并将其数据结构转换为"),t("code",[e._v("array<{key, title, children}>")]),e._v("类型（这里后端接口直接返回的就是这个格式，无需转换）")]),e._v(" "),t("p",[t("strong",[e._v("src\\pages\\System\\Role\\components\\RoleAuthTree.jsx")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import authApi from '@/api/auth'\nconst RoleAuthTree = () => {\n // 权限树的数据\n  const [treeData, setTreeData] = useState([])\n  // 勾选的复选框数组\n  const [checkedKeys, setCheckedKeys] = useState([])\n  // 勾选复选框回调\n  const onCheck = (checkedKeysValue) => {\n    setCheckedKeys(checkedKeysValue)\n  }\n​\n  const onCancel = () => {\n    setCheckedKeys({ checked: [], halfChecked: [] })\n    toggleAssignStatus(false)\n  }\n  \n  const onSubmit = async () => {\n    toggleAssignStatus(false)\n  }\n​\n  useEffect(() => {\n    const fetchAuthTree = async () => {\n      const { data } = await authApi.options.getAuth()\n      setTreeData(data)\n    }\n    fetchAuthTree()\n  }, [])\n  return (\n    <>\n      {treeData.length > 0 && (\n        <Tree\n          checkable\n          defaultExpandAll={true}\n          onCheck={onCheck}\n          checkedKeys={checkedKeys}\n          checkStrictly\n          treeData={treeData}\n        />\n      )}\n      <div style={{ textAlign: 'center' }}>\n        <Button onClick={onCancel}>取消</Button>\n        <Button type=\"primary\" style={{ marginLeft: 32 }} onClick={onSubmit}>\n          确认\n        </Button>\n      </div>\n    </>\n  )\n}\nexport default RoleAuthTree\n")])])]),t("p",[e._v("2.获取当前角色所拥有权限数据的数组，这个我们在父组件请求接口获取后传进来")]),e._v(" "),t("p",[t("strong",[e._v("src\\pages\\System\\Role\\index.jsx")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("...\n// 表格列配置\nconst columns = [\n      {\n      title: '操作',\n      key: 'action',\n      render: (text, row) => (\n        <Space\n          style={{\n            cursor: 'pointer',\n            color: '#2378f7',\n            fontSize: '15px'\n          }}>\n          ...\n          <span onClick={() => assignRoleAuth(row.role_id)}>\n            <AuthComponent permission=\"system:role:assignAuth\" title=\"分配权限\">\n              分配权限\n            </AuthComponent>\n          </span>\n        </Space>\n      ),\n      align: 'center'\n    }\n]\n/** 分配角色权限 */\n  const [assignRoleId, setAssignRoleId] = useState()\n  const roleAuthRef = useRef()\n  // 当前行角色权限数据\n  const [roleAuths, setRoleAuths] = useState([])\n  const toggleAssignStatus = (status) => {\n    roleAuthRef.current.toggleShowStatus(status)\n  }\n  const assignRoleAuth = async (role_id) => {\n   // 获取该角色id的权限数据\n    const { data } = await roleApi.resource.getRes(role_id)\n    setAssignRoleId(role_id)\n    setRoleAuths(data)\n    toggleAssignStatus(true)\n  }\n  <CustomModal title=\"分配角色权限\" ref={roleAuthRef}>\n    <RoleAuthTree\n      role_id={assignRoleId}\n      roleAuths={roleAuths}\n      toggleAssignStatus={toggleAssignStatus}></RoleAuthTree>\n  </CustomModal>\n")])])]),t("p",[t("strong",[e._v("src\\pages\\System\\Role\\components\\RoleAuthTree.jsx")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const RoleAuthTree = ({ role_id, roleAuths, toggleAssignStatus }) => {\n  const fetchAuthTree = async () => {\n    const { data } = await authApi.options.getAuth()\n    setTreeData(data)\n    // 设置勾选复选框为传入角色权限数据\n    setCheckedKeys((checkedKeys) => ({ ...checkedKeys, checked: roleAuths }))\n  }\n}\n")])])]),t("p",[e._v("3.勾选完复选框提交数据，也是请求接口提交当前已勾选角色的权限数据")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" const onSubmit = async () => {\n   await roleApi.resource.updRes(role_id, { all_ids: checkedKeys.checked })\n   message.success('分配角色权限成功')\n   toggleAssignStatus(false)\n }\n")])])]),t("h3",{attrs:{id:"最终效果-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#最终效果-2"}},[e._v("#")]),e._v(" 最终效果")]),e._v(" "),t("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6f87db6badf14173895b977bf79da458~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2559&h=1206&s=123292&e=png&b=898989",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("h2",{attrs:{id:"权限管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#权限管理"}},[e._v("#")]),e._v(" 权限管理")]),e._v(" "),t("p",[e._v("权限管理页面由于要展示菜单+按钮，所以需要层级嵌套的组件结构，在"),t("code",[e._v("antd")]),e._v("中树形表格可以实现。由于不需要分页，我们直接用"),t("code",[e._v("antd")]),e._v("的"),t("code",[e._v("Table")]),e._v("组件。")]),e._v(" "),t("h4",{attrs:{id:"树形表格"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#树形表格"}},[e._v("#")]),e._v(" 树形表格")]),e._v(" "),t("p",[e._v("Table 组件的"),t("code",[e._v("dataSource")]),e._v("属性只要数据中有"),t("code",[e._v("children")]),e._v("字段会自动展示为树形表格")]),e._v(" "),t("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b47c7d80da8c4408871f924191611cf6~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1510&h=226&s=28647&e=png&b=fefefe",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("p",[e._v("我们只需要传给"),t("code",[e._v("Table")]),e._v("组件的"),t("code",[e._v("dataSource")]),e._v("如下图所示的数据")]),e._v(" "),t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ec04ee5a624d4491be86e71f874bfa18~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=669&h=753&s=62000&e=png&b=fefefe",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("p",[e._v("展示效果如下")]),e._v(" "),t("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/000cfc4f13fe4c7f8210846da589a97f~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2559&h=1206&s=116429&e=png&b=fdfdfd",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("h4",{attrs:{id:"表单编辑"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#表单编辑"}},[e._v("#")]),e._v(" 表单编辑")]),e._v(" "),t("p",[e._v("表单编辑按照不同的类别会展示不同的表单项让用户填写")]),e._v(" "),t("ul",[t("li",[e._v("共有：父级菜单（下拉框）、权限名称、权限类型（目录、菜单、按钮）、排序、状态（显示、隐藏）")]),e._v(" "),t("li",[e._v("目录类型：路由路径（即 React Router 的 path 字段）、图标（自定义选择"),t("code",[e._v("svg")]),e._v("图标组件）、重定向路径（访问路径时重定向哪个子路由）")]),e._v(" "),t("li",[e._v("菜单类型：路由路径（即 React Router 的 path 字段）、图标（自定义选择"),t("code",[e._v("svg")]),e._v("图标组件）、组件路径（组件在项目文件夹中的路径）")]),e._v(" "),t("li",[e._v("按钮类型：权限标识（按钮的唯一标识）")])]),e._v(" "),t("p",[e._v("然后我们封装一下选择图标的组件")]),e._v(" "),t("h5",{attrs:{id:"封装选择图标组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#封装选择图标组件"}},[e._v("#")]),e._v(" 封装选择图标组件")]),e._v(" "),t("p",[e._v("之前我们已经封装过"),t("code",[e._v("SvgIcon")]),e._v("组件，如下图")]),e._v(" "),t("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0bfd8e1a8dc34323bd31474ac684508e~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=946&h=214&s=31042&e=png&b=282c34",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("p",[e._v("现在图标已经全部引入，并挂载到"),t("code",[e._v("body")]),e._v("上了。我们现在只需要传入图中"),t("code",[e._v("name")]),e._v("就能显示不同的"),t("code",[e._v("svg")]),e._v("图标。那么我们只要获取所有的"),t("code",[e._v("svg")]),e._v("图标名称，"),t("strong",[e._v("存在数组里并且遍历渲染")]),e._v("出来不就有"),t("code",[e._v("svg")]),e._v("图标列表，再添加一下选择事件就可以了。")]),e._v(" "),t("p",[e._v("之前其实已经给大家提供了这个方法")]),e._v(" "),t("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/47437bd5f0cf441e9c7679648d09d028~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1059&h=570&s=114367&e=png&b=282c34",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("p",[e._v("就是全量导入"),t("code",[e._v("svg")]),e._v("图标后，按正则表达式去匹配就可以得到"),t("code",[e._v("['404','bug'...]")]),e._v("这样的图标名称列表。")]),e._v(" "),t("p",[e._v("然后我们在选择图标组件中导入这个方法调用赋值给一个变量，这个变量就是图标数组，我们遍历展示即可。")]),e._v(" "),t("p",[t("strong",[e._v("src/components/IconSelect/index.jsx")])]),e._v(" "),t("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f04ed3cd022e4e0d861eb83e05656f7f~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1389&h=817&s=130208&e=png&b=282c34",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("p",[e._v("在"),t("strong",[e._v("表单编辑")]),e._v("组件中使用")]),e._v(" "),t("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5343ac1846454a89b2b6167191d1b3e9~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1036&h=774&s=108128&e=png&b=282c34",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("p",[e._v("把上图的"),t("code",[e._v("iconSelectVDOM")]),e._v("放在表单项中即可")]),e._v(" "),t("h5",{attrs:{id:"获取数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获取数据"}},[e._v("#")]),e._v(" 获取数据")]),e._v(" "),t("p",[e._v("从表格页进来新增、编辑有三种情况")]),e._v(" "),t("ul",[t("li",[e._v("直接点击按钮栏的新增（无 id），那么我们只要清空表单即可")]),e._v(" "),t("li",[e._v("点击表格操作列的添加（有 id），那么我们除清空表单外，还要给父级菜单的下拉框回显当前 id 的值作为父级菜单")]),e._v(" "),t("li",[e._v("表格操作列编辑（有 id），根据 id 请求接口获取信息回显值")])]),e._v(" "),t("p",[e._v("父级下拉框的选项是"),t("strong",[e._v("树形结构")]),e._v("，除了我们从接口获取的菜单数据，我们还应该在顶层添加一条作为"),t("strong",[e._v("顶层菜单")]),e._v("：值为 0，children 配置再添加接口传递的菜单项数据。获取数据的代码如下图")]),e._v(" "),t("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1cf6285484c9455baa412dee2ca9e959~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1282&h=837&s=134918&e=png&b=282c34",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("p",[e._v("这里我们系统管理模块就结束了。")]),e._v(" "),t("h2",{attrs:{id:"代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[e._v("#")]),e._v(" 代码")]),e._v(" "),t("p",[e._v("上述实现的代码都放在"),t("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2FAlan-222%2Freact-antd5-admin",title:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2FAlan-222%2Freact-antd5-admin",target:"_blank",rel:"noopener noreferrer"}},[e._v("react-antd5-admin"),t("OutboundLink")],1),e._v("，大家可自行查阅")])])}),[],!1,null,null,null);t.default=n.exports}}]);