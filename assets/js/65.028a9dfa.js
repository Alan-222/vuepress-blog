(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{478:function(e,r,t){"use strict";t.r(r);var a=t(2),s=Object(a.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"前言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),r("p",[e._v("上文我们完成了添加用户的接口，本文我们继续来完成登录接口。要完成登录接口，首先还要三个步骤。")]),e._v(" "),r("ol",[r("li",[e._v("前端获取登录验证码接口（新的接口）")]),e._v(" "),r("li",[e._v("验证登录用户信息（用户名、帐户、密码、uuid（验证验证码唯一字段））")]),e._v(" "),r("li",[e._v("判断用户名是否存在、账号是否停用")])]),e._v(" "),r("blockquote",[r("p",[e._v("uuid 为前端传来的验证图片验证码的唯一字段。前端获取验证码时用 uuid 获取验证码后端返回验证码并将 uuid 及验证码通过 key，value 的形式存在 redis 数据库，然后再将此 uuid 传给登录接口就可进行验证码的验证")])]),e._v(" "),r("h2",{attrs:{id:"获取登录验证码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#获取登录验证码"}},[e._v("#")]),e._v(" 获取登录验证码")]),e._v(" "),r("h3",{attrs:{id:"添加路由"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#添加路由"}},[e._v("#")]),e._v(" 添加路由")]),e._v(" "),r("p",[r("strong",[e._v("router/user.js")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("// 获取图形验证码\nrouter.get('/checkCode', userHandler.getCheckCode);\n")])])]),r("h3",{attrs:{id:"添加路由回调函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#添加路由回调函数"}},[e._v("#")]),e._v(" 添加路由回调函数")]),e._v(" "),r("p",[e._v("我们是采用"),r("code",[e._v("svg-captcha")]),e._v("这个库完成验证码的生成。然后通过"),r("code",[e._v("redis")]),e._v("存下验证码信息。例如"),r("code",[e._v("{1665656556：axud}")]),e._v("。所以我们先引入"),r("code",[e._v("svg-captcha")]),e._v("、"),r("code",[e._v("redis")])]),e._v(" "),r("p",[r("strong",[e._v("router_handler/user.js")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("// 引入生成图形验证码库\nconst svgCaptcha=require('svg-captcha')\n// 引入封装好的redis\nconst redis = require('../utils/redis.js');\n")])])]),r("p",[e._v("然后生成验证码，验证码信息用一定时间缓存入"),r("code",[e._v("redis")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("/**\n * 获取图形验证码\n */\nexports.getCheckCode = (req, res) => {\n // 生成验证码，获取catcha，有{data,text}两个属性，data为svg格式图片、text为验证码\n  const captcha = svgCaptcha.create({\n    size: 4,\n    ignoreChars: '0o1l',\n    color: true,\n    noise: 6,\n    background: '#cc9966',\n    height: 32,\n    width: 100\n  });\n  // 测试\n  console.log(captcha)\n  // 验证码键和缓存时间\n  const uuid = req.query.uuid;\n  const effectTime = 10 * 60;\n  // 存入redis\n  redis\n    .setKey(uuid, captcha.text.toLowerCase(), effectTime)\n    .then((result) => {\n      if (result) {\n        res.setHeader('Content-Type', 'image/svg+xml;charset=utf-8');\n        res.send({\n          code: 0,\n          message: '获取验证码成功',\n          data: captcha.data\n        });\n      }\n    })\n    .catch((err) => {\n      console.log(err);\n      return res.send({\n        code: 1,\n        message: '验证码获取失败',\n        data: null\n      });\n    });\n};\n")])])]),r("h2",{attrs:{id:"验证用户信息"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#验证用户信息"}},[e._v("#")]),e._v(" 验证用户信息")]),e._v(" "),r("p",[e._v("我们还是跟添加用户接口一样，使用"),r("code",[e._v("joi")]),e._v("添加对应需要验证的字段规则。")]),e._v(" "),r("p",[r("strong",[e._v("schema/user.js")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("// 用户名的校验规则\nconst username = joi.string().alphanum().min(1).max(10).required();\n// 密码的验证规则\nconst password = joi\n  .string()\n  .pattern(/^[\\S]{6,12}$/)\n  .required();\nconst checkCode = joi.string().alphanum().min(4).max(4).required();\nconst uuid = joi.number().required();\n​\n// 登录表单的验证规则对象\nexports.user_login_schema = joi.object().keys({\n  username,\n  password,\n  checkCode,\n  uuid\n});\n")])])]),r("p",[e._v("然后在路由的回调函数中进行验证")]),e._v(" "),r("p",[r("strong",[e._v("router_handler/user.js")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("// 登录路由的处理函数\nexports.login = (req, res) => {\n// 验证入参，错误时抛出以捕获\nconst { error, value } = user_login_schema.validate(req.body);\nif (error) {\n  throw error;\n }\n // 验证验证码\n  const {username,password,checkCode,uuid}=value\n  const captcha = await redis.getKey(uuid);\n  if (!captcha) {\n    return res.send({\n      code: 1,\n      message: '图形验证码已过期，请点击图片刷新'\n    });\n  }\n  if (checkCode.toLowerCase() !== captcha.toLowerCase()) {\n    return res.send({\n      code: 1,\n      message: '图形验证码不正确，请重新输入'\n    });\n  }\n}）\n")])])]),r("h2",{attrs:{id:"测试"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[e._v("#")]),e._v(" 测试")]),e._v(" "),r("p",[e._v("1.获取验证码")]),e._v(" "),r("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6587e74ece474e588958ecb33ea624cd~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),r("p",[e._v("如果出现这个就说明成功了（因为我们接口返回的是 svg 格式图片，出现这个可能是 postman 无法识别 svg 格式）")]),e._v(" "),r("p",[e._v("我们可以看控制台打印的信息和 redis 数据库，发现是成功的")]),e._v(" "),r("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/686d2e4d3c994508901dd97b45faac96~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),r("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bdd626c9cc53466bbf67c03e69d78b7e~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),r("p",[e._v("2.登录接口测试")]),e._v(" "),r("p",[e._v("我们用刚才的 uuid 和验证码进行登录")]),e._v(" "),r("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/83f05b587136466586c1b567977c7c7d~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),r("p",[e._v("出现这个就说明成功了（由于本文篇幅原因，我们还没有验证用户名是否存在、可用，然后用"),r("code",[e._v("res.send")]),e._v("返回信息，没有返回信息的话，它就会一直请求）")]),e._v(" "),r("p",[e._v("我们用错误的验证码再来试试")]),e._v(" "),r("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/49872e3c964844afa6e1d69446b6d8a8~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),r("p",[e._v("发现验证码验证模块成功。下文我们将会完成登录接口。")])])}),[],!1,null,null,null);r.default=s.exports}}]);