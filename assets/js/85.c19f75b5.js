(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{491:function(e,t,a){"use strict";a.r(t);var r=a(2),n=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),t("p",[e._v("上文已经搭建并简化好了脚手架，本文我们用"),t("code",[e._v("react-router-dom")]),e._v("库和它提供的"),t("code",[e._v("useRoutes")]),e._v(" hook 来进行基本的路由配置。")]),e._v(" "),t("h2",{attrs:{id:"基本路由配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本路由配置"}},[e._v("#")]),e._v(" 基本路由配置")]),e._v(" "),t("h3",{attrs:{id:"安装路由库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装路由库"}},[e._v("#")]),e._v(" 安装路由库")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm install react-router-dom\n")])])]),t("h3",{attrs:{id:"配置入口文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置入口文件"}},[e._v("#")]),e._v(" 配置入口文件")]),e._v(" "),t("p",[t("code",[e._v("index.js")]),e._v("入口文件中使用"),t("code",[e._v("BrowserRouter")]),e._v("或"),t("code",[e._v("HashRouter")]),e._v("标签包裹根组件"),t("code",[e._v("App")]),e._v("，这里我们使用"),t("code",[e._v("BrowserRouter")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport './index.scss'\n​\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n")])])]),t("blockquote",[t("p",[e._v("1."),t("code",[e._v("BrowserRouter")]),e._v("使用的是 H5 的 history API，不兼容 IE9 及以下版本。"),t("code",[e._v("HashRouter")]),e._v("使用的是 URL 的哈希值。")]),e._v(" "),t("p",[e._v("2.url 呈现形式不同")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("BrowserRouter`的路径中没有#,例如：`localhost:3000/demo/test\nHashRouter`的路径包含#,例如：`localhost:3000/#/demo/test\n")])])]),t("p",[e._v("3.刷新后"),t("code",[e._v("HashRouter")]),e._v("会导致路由 state 参数的丢失，而"),t("code",[e._v("BrowserRouter")]),e._v("不会（因为 state 对象存放在 history 对象中）")])]),e._v(" "),t("h3",{attrs:{id:"配置路由表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置路由表"}},[e._v("#")]),e._v(" 配置路由表")]),e._v(" "),t("p",[t("code",[e._v("src")]),e._v("下新建文件"),t("code",[e._v("router/index.js")]),e._v("里面用来存放路由表（类型为数组，格式为"),t("code",[e._v("{path:路由路径,element:路由组件}")]),e._v("） ")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import Home from '@/pages/Home/Home'\nimport { Navigate } from 'react-router-dom'\n​\nconst routes = [\n  // 访问/时重定向到/home\n  {\n    path: '/',\n    element: <Navigate to=\"/home\" replace />\n  },\n  {\n    path: 'home',\n    element: <Home />\n  }\n]\nexport default routes\n")])])]),t("h3",{attrs:{id:"编写页面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编写页面"}},[e._v("#")]),e._v(" 编写页面")]),e._v(" "),t("p",[t("code",[e._v("src")]),e._v("下新建"),t("code",[e._v("pages/Home/index.jsx")]),e._v("存放路由文件（这里除了这种命名方式还有"),t("code",[e._v("pages/Home/Home.jsx")]),e._v("，具体看项目要求或个人喜好）")]),e._v(" "),t("p",[t("strong",[e._v("src/pages/Home/Home.jsx")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import React from 'react'\nconst Home = () => {\n  return <div>Home</div>\n}\nexport default Home\n")])])]),t("h3",{attrs:{id:"改造根组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#改造根组件"}},[e._v("#")]),e._v(" 改造根组件")]),e._v(" "),t("p",[e._v("在根组件"),t("code",[e._v("App.jsx")]),e._v("中用"),t("code",[e._v("useRoutes")]),e._v("hook 包裹第二步的路由表（可以动态创建 Routes 和 Route 标签）\n"),t("strong",[e._v("App.jsx")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import React from 'react'\nimport { useRoutes } from 'react-router-dom'\nimport routes from '@/router'\nconst App = () => {\n  const element = useRoutes(routes)\n  return <div>{element}</div>\n}\n​\nexport default App\n")])])]),t("p",[e._v("然后我们在终端输入"),t("code",[e._v("npm start")]),e._v("启动项目跳转首页显示 Home 字样即配置成功")]),e._v(" "),t("h2",{attrs:{id:"嵌套路由配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#嵌套路由配置"}},[e._v("#")]),e._v(" 嵌套路由配置")]),e._v(" "),t("p",[e._v("前端静态的路由配置已经能够完成了，我们可以通过在"),t("code",[e._v("router/index.js")]),e._v("增加自己所需要的路由并添加对应的页面来实现。")]),e._v(" "),t("p",[e._v("但对于后台管理系统而言，通常会在根组件"),t("code",[e._v("App")]),e._v("和路由组件中间添加一个"),t("code",[e._v("Layout")]),e._v("组件用来布局侧边栏、头部导航、内容区域等。我们这里简单用上导航下内容区域实现一下。")]),e._v(" "),t("h3",{attrs:{id:"添加布局组件-layout"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加布局组件-layout"}},[e._v("#")]),e._v(" 添加布局组件 Layout")]),e._v(" "),t("p",[e._v("首要的当然是先配置路由表。这里我们默认进来展示的组件就要是"),t("code",[e._v("Layout组件")]),e._v("，但是我们又想重定向到首页"),t("code",[e._v("Home组件")]),e._v('，也就是访问"/"时我们直接转到"/home"就可以使用'),t("code",[e._v('{ index: true, element: <Navigate to="/home" replace /> }')]),e._v("配置索引路由")]),e._v(" "),t("blockquote",[t("p",[e._v("索引路由可以被认为是“默认子路由”。当父路由有多个子路由，但 URL 仅在父路由的路径上时，您可能需要将某些内容呈现到 outlet 中。")])]),e._v(" "),t("p",[t("strong",[e._v("src/router/index.js")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("...\n​\nconst routes = [\n  // 访问/时重定向到/home\n  {\n    path: '/',\n    element: <Layout />,\n    children: [\n      { index: true, element: <Navigate to=\"/home\" replace /> },\n      { path: 'home', element: <Home /> },\n    ]\n  }\n]\n​\n...\n")])])]),t("p",[e._v("随后编写页面 Layout（注意，Layout 不是路由组件，我们在 src 下新建一个 Layout 目录来编写页面）")]),e._v(" "),t("p",[t("strong",[e._v("src/Layout/index.jsx")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import React from 'react'\nimport { Link, Outlet } from 'react-router-dom'\n​\nconst Layout = () => {\n  return (\n    <div>\n      <div style={{ marginBottom: 20 }}>\n        Layout的头部导航：\n        <Link to=\"/home\" style={{ marginRight: 20 }}>\n          首页\n        </Link>\n      </div>\n      Layout的内容区域\n      <Outlet />\n    </div>\n  )\n}\n​\nexport default Layout\n")])])]),t("p",[e._v("我们启动项目就可以看到如下的效果。我们可以看到路径不为'/'而为'/home'说明通过索引路由重定向到了 Home 组件")]),e._v(" "),t("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4740e40455ed468a9bdf2f59fd5a40f0~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=969&h=378&s=17282&e=png&b=ffffff",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("h3",{attrs:{id:"添加嵌套路由"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加嵌套路由"}},[e._v("#")]),e._v(" 添加嵌套路由")]),e._v(" "),t("p",[e._v("接下来我们就来添加嵌套路由，比如我有一个二级菜单目录叫系统管理，里面嵌套有用户管理、角色管理、权限管理的菜单，而且当我访问系统管理的路径时要重定向到用户管理。我们可以用上面的做法来实现。")]),e._v(" "),t("p",[t("strong",[e._v("src/router/index.jsx")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("...\n​\nconst routes = [\n  // 访问/时重定向到/home\n  {\n    path: '/',\n    element: <Layout />,\n    children: [\n      { index: true, element: <Navigate to=\"/home\" replace /> },\n      { path: 'home', element: <Home /> },\n      {\n        path: 'system',\n        element: <System />,\n        children: [\n          { index: true, element: <Navigate to=\"/system/user\" replace /> },\n          { path: 'user', element: <User /> },\n          { path: 'role', element: <Role /> },\n          { path: 'auth', element: <Auth /> }\n        ]\n      }\n    ]\n  }\n]\n​\n...\n")])])]),t("p",[t("strong",[e._v("src/pages/System/index.jsx")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('import React from \'react\'\nimport { Link, Outlet } from \'react-router-dom\'\n​\nconst System = () => {\n  return (\n    <div>\n      <div>\n        System的头部导航：\n        <Link to="/system/user" style={{ marginRight: 20 }}>\n          用户管理\n        </Link>\n        <Link to="/system/role" style={{ marginRight: 20 }}>\n          角色管理\n        </Link>\n        <Link to="/system/auth">权限管理</Link>\n      </div>\n      System的内容区域：\n      <Outlet />\n    </div>\n  )\n}\n​\nexport default System\n')])])]),t("p",[e._v("然后 Layout 头部导航区添加一句"),t("code",[e._v('<Link to="/system">系统管理</Link>')]),e._v("。系统管理的子组件用户管理等就不再贴出代码了，就是简单标识一下组件。")]),e._v(" "),t("p",[e._v("我们来看一下效果。点击系统管理直接跳到用户管理。再点击导航链接回到首页也没什么问题。嵌套路由的配置工作就算是完成了")]),e._v(" "),t("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/96f73f3347f84d5c97b9f8975c33fd2b~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=701&h=300&s=33027&e=png&b=ffffff",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("h2",{attrs:{id:"代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[e._v("#")]),e._v(" 代码")]),e._v(" "),t("p",[e._v("上述实现的代码都放在"),t("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2FAlan-222%2Freact-antd5-admin",title:"https://github.com/Alan-222/react-antd5-admin",target:"_blank",rel:"noopener noreferrer"}},[e._v("react-antd5-admin"),t("OutboundLink")],1),e._v("，大家可自行查阅")])])}),[],!1,null,null,null);t.default=n.exports}}]);