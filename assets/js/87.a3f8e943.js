(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{494:function(n,e,t){"use strict";t.r(e);var a=t(2),r=Object(a.a)({},(function(){var n=this,e=n._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[n._v("#")]),n._v(" 前言")]),n._v(" "),e("p",[n._v("大家可能都有通过 ui 库实现轮播图的经历，本文将通过原生 JS 的方式来实现，让大家能够更为清楚其实现的原理与要点。")]),n._v(" "),e("h2",{attrs:{id:"步骤流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#步骤流程"}},[n._v("#")]),n._v(" 步骤流程")]),n._v(" "),e("p",[n._v("在实现之前，我们先来大概 描述一下轮播图实现的"),e("strong",[n._v("流程")]),n._v("。")]),n._v(" "),e("p",[n._v("1.首先我们肯定得有轮播图的展示区展示轮播的图片")]),n._v(" "),e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/af481ae54d5142f28ff2767b871765d0~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),n._v(" "),e("p",[n._v("2.轮播的图片一般是一个 ul 无序列表我们将其宽度设置为总图片宽度+左右外边距 margin。轮播图展示区 position 属性设置为 relative，再将 ul 列表展示区 position 属性设为 absolute 就能够通过设置"),e("strong",[n._v("left 值")]),n._v("使其向左滚动。")]),n._v(" "),e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/eba1c9caa81c4e9294091ac532c56643~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),n._v(" "),e("p",[n._v("3.在图片上还应该有 a 标签（阻止跳转事件）或者 li 标签充当跳转按钮，再循环遍历这些按钮绑定跳转事件控制 l"),e("strong",[n._v("eft 值大小")]),n._v("移动来指定图片即可，可通过定时器来控制移动的动画效果。")]),n._v(" "),e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/001756fffe804fe6a420a02da6ba99aa~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),n._v(" "),e("p",[n._v("4.幻灯片播放与跳转类似，只是图片展示和按钮展示要一致。并且在自动播放时若点击了跳转按钮，应该"),e("strong",[n._v("清除自动播放的定时器")]),n._v("停止播放，防止冲突。再跳转事件结束后再开启自动播放定时器即可。")]),n._v(" "),e("p",[n._v("5.但这样会有一个问题，假设我们自动播放的频率为 3s，那我从最后一张播放到第一张 left 值是不是从(index-1)*width(图片总宽度乘数组长度减去 1)到 0，肯定是 ul 总体是得向右到第一张图片给大家演示一下，这样花费时间一般是大于 2 倍的播放频率")]),n._v(" "),e("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b42a7b2d0240443e83af195e0af8da6a~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),n._v(" "),e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/134c219316894d029e7eacfd6d544fcd~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),n._v(" "),e("p",[n._v("那么，这样就会有冲突，因为这样的话，它可能直接就跳到第二张图片这样。")]),n._v(" "),e("p",[e("strong",[n._v("那么，该如何解决呢？")])]),n._v(" "),e("p",[n._v("我们可以在末尾再放第一张图片，然后从最后一张点击跳转到第一张时把 left 值直接修改为 0，他是不是直接就到第一张了，自动播放也可继续进行了。注意！！不可以在点击第五张图片就把 left 值修改为 0，这样点击事件的第五张图片就直接到第一张了，必须在末尾新增第一张图片！！！")]),n._v(" "),e("blockquote",[e("p",[n._v("ps：不理解的抱歉哈，演示在后续实现中进行，这里不好演示")])]),n._v(" "),e("h2",{attrs:{id:"实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[n._v("#")]),n._v(" 实现")]),n._v(" "),e("p",[n._v("1.网页结构与 css")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v(' <div id="carousel">\n        <ul id="imgList">\n           <li><img src="./img/1.jpg"></li>\n           <li><img src="./img/2.jpg"></li>\n           <li><img src="./img/3.jpg"></li>\n           <li><img src="./img/4.jpg"></li>\n           <li><img src="./img/5.jpg"></li>\n           <li><img src="./img/1.jpg"/></li>\n        </ul>\n        <div id="handler">\n           <a href="javascript:;"></a>\n           <a href="javascript:;"></a>\n           <a href="javascript:;"></a>\n           <a href="javascript:;"></a>\n           <a href="javascript:;"></a>\n        </div>\n </div>\n')])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("<style>\n        *{\n            margin: 0;\n            padding: 0;\n        }\n        #carousel{\n            /*设置轮播图展示区的大小颜色*/\n            width: 945px;\n            height: 617px;\n            margin: 10px auto;\n            background-color: royalblue;\n            padding: 20px 0;\n            /*设置定位成为ul父元素*/\n            position: relative;\n            /*裁剪溢出轮播图展示区的图片内容*/\n            overflow: hidden;\n        }\n        #imgList{\n            list-style: none;\n            position: absolute;\n        }\n        #imgList li{\n            float: left;\n            margin: 0 10px;\n        }\n        #imgList li img{\n            object-fit: cover;\n        }\n        #handler{\n            /*设置a标签按钮位置*/\n            position: absolute;\n            bottom: 40px;\n        }\n        #handler a{\n            /*设置a标签按钮大小样式*/\n            float: left;\n            width: 20px;\n            height: 20px;\n            background-color: grey;\n            opacity: 0.6;\n            margin: 0 10px;\n        }\n        #handler a:hover{\n            /*设置a标签悬浮效果*/\n            background-color: aquamarine;\n        }\n  </style>\n")])])]),e("p",[n._v("2.动态设置轮播图展示区宽度及按钮区的位置")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('    window.onload=function(){\n    //获取ul列表\n    var imgList=document.getElementById(\'imgList\');\n​\n    //获取所有图片标签\n    var img=document.getElementsByTagName(\'img\')\n​\n​\n    //动态设置ul的宽度以适应图片的动态增加减少\n    imgList.style.width=img.length*945+"px";\n​\n    /*设置导航按钮居中*/\n​\n    //获取handler轮播图导航栏\n    var handler = document.getElementById("handler");\n​\n    //获取carousel的div\n    var carousel = document.getElementById("carousel");\n​\n    //设置获取handler的left值,以适应动态的增加减少a标签达到居中效果\n    handler.style.left = (carousel.offsetWidth - handler.offsetWidth)/2 + "px";\n    }\n')])])]),e("p",[n._v("3.为按钮绑定事件")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('//设置图片的索引\nvar index=0;\n​\n//获取所有a标签\nvar a=document.getElementsByTagName("a");\n​\n//选中图片默认样式\na[index].style.backgroundColor="aquamarine";\n​\n//为所有的超链接都绑定单击响应函数\nfor(var i=0; i<a.length ; i++){\n​\n//为每一个超链接都添加一个num属性\na[i].num = i;\n​\n//为超链接绑定单击响应函数\na[i].onclick = function(){\n​\n    //关闭自动切换的定时器\n    clearInterval(timer);\n    //获取点击超链接的索引,并将其设置为index\n    index = this.num;\n​\n    //切换图片\n    /*\n     * 第一张  0 0\n     * 第二张  1 -945\n     * 第三张  2 -1890\n     */\n​\n    //设置选中的a标签\n    active();\n​\n    //使用move函数来切换图片\n    move(imgList , "left" , -945*index , 45,function(){\n        //设置自动切换\n        autoChange();\n    });\n};\n')])])]),e("p",[n._v("4.图片操作函数")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('function active(){\n    //判断当前索引是否是最后一张图片\n    if(index >= img.length - 1){\n        //则将index设置为0\n        index = 0;\n​\n        //此时显示的最后一张图片，而最后一张图片和第一张是一摸一样\n        //通过CSS将最后一张切换成第一张\n        imgList.style.left = 0;\n    }\n    //遍历所有a，并将它们的背景颜色设置为红色\n    for(var i=0 ; i<a.length ; i++){\n        a[i].style.backgroundColor = "";\n    }\n    a[index].style.backgroundColor = "aquamarine";\n};\nfunction move(obj, direction, target, speed, callback) {\n        //关闭上一个定时器\n        clearInterval(obj.timer);\n​\n        //获取元素目前的位置\n        var current = parseInt(getComputedStyle(obj,null)[direction]);\n​\n        //判断速度的正负值\n        //如果从0 向 target移动，则speed为正\n        //如果从target向0移动，则speed为负\n        if(current>target){\n            speed=-speed;\n        }\n        //开启一个定时器，用来执行动画效果\n        //向执行动画的对象中添加一个timer属性，用来保存它自己的定时器的标识\n        obj.timer = setInterval(function() {\n​\n            //获取box1的原来的left值\n            var oldValue = parseInt(getComputedStyle(obj,null)[direction]);\n​\n            //在旧值的基础上增加\n            var newValue = oldValue + speed;\n​\n            //判断newValue是否大于target\n            //向左移动时，需要判断newValue是否小于target\n            //向右移动时，需要判断newValue是否大于target\n            if((speed < 0 && newValue < target) || (speed > 0 && newValue > target)) {\n                newValue = target;\n            }\n​\n            //将新值设置给box1\n            obj.style[direction] = newValue + "px";\n​\n            //当元素移动到0px时，使其停止执行动画\n            if(newValue == target) {\n                //达到目标，关闭定时器\n                clearInterval(obj.timer);\n                callback && callback();\n            }\n        }, 30);\n    };\n//定义一个自动切换的定时器的标识\nvar timer;\n//创建一个函数，用来开启自动切换图片\nfunction autoChange(){\n​\n    //开启一个定时器，用来定时去切换图片\n    timer = setInterval(function(){\n​\n        //使索引自增\n        index++;\n​\n        //判断index的值\n        index %= img.length;\n​\n        //执行动画，切换图片\n        move(imgList , "left" , -945*index , 45,function(){\n         //修改导航按钮\n            active();\n        } );  \n    },3000);\n};\n')])])]),e("h2",{attrs:{id:"效果"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#效果"}},[n._v("#")]),n._v(" 效果")]),n._v(" "),e("p",[n._v("最后一张自动播放到第一张（取消 overflow:hidden 让大家看更清楚）")]),n._v(" "),e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ea8d0a47272b4af79c3aefe07388af3a~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),n._v(" "),e("p",[n._v("总体效果图")]),n._v(" "),e("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4705cc80654b4ad2af6000ce8419944f~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),n._v(" "),e("h3",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[n._v("#")]),n._v(" 总结")]),n._v(" "),e("p",[n._v("这就是有关原生 JS 实现轮播图的实现。希望大家能够有所得，有问题的欢迎共同讨论")])])}),[],!1,null,null,null);e.default=r.exports}}]);