(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{448:function(t,e,a){"use strict";a.r(e);var s=a(2),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),e("p",[t._v("在前面的文章里，我们分别讲了"),e("a",{attrs:{href:"https://juejin.cn/post/7084528342497493000",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vuex 如何利用 state 与 mutations、actions 进行集中状态的管理"),e("OutboundLink")],1),t._v("以及"),e("a",{attrs:{href:"https://juejin.cn/post/7085326442505961509",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vuex 通过 getters 对 state 中的数据进行加工"),e("OutboundLink")],1),t._v("。在本文我们将会继续进行 Vuex 的讲解。")]),t._v(" "),e("h2",{attrs:{id:"mapstate、mapgetters-的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mapstate、mapgetters-的使用"}},[t._v("#")]),t._v(" mapState、mapGetters 的使用")]),t._v(" "),e("h3",{attrs:{id:"概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" "),e("strong",[t._v("概念")])]),t._v(" "),e("ol",[e("li",[e("strong",[t._v("mapState 方法：")]),t._v(" 用于帮助我们映射"),e("code",[t._v("state")]),t._v("中的数据为计算属性")]),t._v(" "),e("li",[e("strong",[t._v("mapGetters 方法：")]),t._v(" 用于帮助我们映射"),e("code",[t._v("getters")]),t._v("中的数据为计算属性")]),t._v(" "),e("li",[e("strong",[t._v("mapActions 方法：")]),t._v(" 用于帮助我们生成与"),e("code",[t._v("actions")]),t._v("对话的方法，即：包含"),e("code",[t._v("$store.dispatch(xxx)")]),t._v("的函数")]),t._v(" "),e("li",[e("strong",[t._v("mapMutations 方法：")]),t._v(" 用于帮助我们生成与"),e("code",[t._v("mutations")]),t._v("对话的方法，即：包含"),e("code",[t._v("$store.commit(xxx)")]),t._v("的函数")])]),t._v(" "),e("p",[t._v("好了，我们现在知道了有这四个 map 方法了，那么有人就要问了我们该啥时候去使用以及如何使用呢？不着急，我们先用一个小案例来看一下。")]),t._v(" "),e("h3",{attrs:{id:"案例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#案例"}},[t._v("#")]),t._v(" "),e("strong",[t._v("案例")])]),t._v(" "),e("p",[t._v("现在我在 store 的 state 中定义了一个有关人员信息的对象数组")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const state = {\n  peopleList: [\n    { name: '张三', age: 13, hobby: { type: 'sport', hobbyName: '打篮球' } },\n    { name: '李四', age: 18, hobby: { type: 'art', hobbyName: '画画' } },\n    { name: '王五', age: 21, hobby: { type: 'sport', hobbyName: '踢足球' } },\n    { name: '陆六', age: 16, hobby: { type: 'word', hobbyName: '写作' } },\n    { name: '燕七', age: 15, hobby: { type: 'art', hobbyName: 'sing' } }\n  ]\n};\n")])])]),e("p",[t._v("我把它展示在组件中")]),t._v(" "),e("p",[e("strong",[t._v("people.vue")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(' \n<ul>\n     \n  <li v-for="(item, index) in $store.state.peopleList" :key="index">\n            {{ item.name }}--{{item.age}}--{{item.hobby.type}}--{{item.hobby.hobbyName}}    \n  </li>\n   \n</ul>\n')])])]),e("p",[t._v("效果也没什么问题")]),t._v(" "),e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e68632e337fb4372ba2e66fad73aa71a~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),t._v(" "),e("p",[t._v("但现在如果我要分开展示名字年龄和爱好，我是不是得这么写")]),t._v(" "),e("p",[e("code",[t._v('v-for="item in $store.state.peopleList.....')])]),t._v(" "),e("p",[t._v("写两遍，但之后只要我请求人员列表的数据我就得在模板写$store.state.peopeoList没得商量，那我再来个monkeyList、birdList是不是都得这么写，我们是不是希望$store.state.peopeoList、$store.state.monkeyList、$store.state.birdList 是这样 peopleList、monkeyList、birdList。之前我们是在计算属性中返回，但要是有更多的数据 10 个、20 个...我们再这样写是不是有些麻烦？所以，vue 官方给我们提供了 map 方法可以让我们简化配置。现在我们来尝试一下！")]),t._v(" "),e("p",[e("strong",[t._v("people.vue")])]),t._v(" "),e("p",[e("strong",[t._v("引入方法")])]),t._v(" "),e("p",[e("code",[t._v("import {mapState} from 'vuex'")])]),t._v(" "),e("p",[e("strong",[t._v("计算属性中定义")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" computed: {\n //数组写法\n//注意名字左边为你要在模板中使用的名字，右边为state中定义的名字 ...mapState({peopleList:'peopleList',monkeyList:'monkeyList',peopleList:'birdList'}),  \n//若左右名字都一样，也可以用对象写法\n...mapState(['peopleList','monkeyList','birdList'])\n    },\n")])])]),e("p",[e("strong",[t._v("模板中使用")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(' \n<ul>\n     \n  <li v-for="(item, index) in peopleList" :key="index">\n            {{ item.name }}--{{item.age}}--{{item.hobby.type}}--{{item.hobby.hobbyName}}    \n  </li>\n   \n</ul>\n')])])]),e("p",[e("strong",[t._v("效果")])]),t._v(" "),e("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/73a5c9835f3f4caa81e9887f4bab2aef~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),t._v(" "),e("p",[t._v("而 mapGetters 的使用方法与 mapState 一样，也是"),e("strong",[t._v("引入->计算属性中定义->模板中使用")]),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"mapactions、mapmutations-的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mapactions、mapmutations-的使用"}},[t._v("#")]),t._v(" mapActions、mapMutations 的使用")]),t._v(" "),e("p",[t._v("mapActions、mapMutations 的使用方法也类似，先引入再在 methods 中定义，最后绑定方法即可。我们下面演示一下！")]),t._v(" "),e("p",[t._v("我们在页面中定义一个数 0，在 store 的 action 中方法中定义偶数就让他加 1，奇数不加，在 mutations 中我们定义加法。")]),t._v(" "),e("p",[e("strong",[t._v("store 中")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const state = {\n  sum: 0\n};\nconst actions = {\n  addEven(context, value) {\n    console.log(context, value);\n    if (context.state.sum % 2 == 0) {\n      context.commit('add', value);\n    }\n  }\n};\nconst mutations = {\n  add(state, value) {\n    state.sum += value;\n  }\n};\n")])])]),e("p",[e("strong",[t._v("sum.vue 中")])]),t._v(" "),e("p",[e("strong",[t._v("引入")])]),t._v(" "),e("p",[e("code",[t._v('import { mapActions,mapMutations } from "vuex";')])]),t._v(" "),e("p",[e("strong",[t._v("定义")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("methods: {\n    //对象形式\n    // ...mapActions({addEven:'addEven'})\n​\n    //数组形式\n    ...mapActions([\"addEven\"]),\n    //对象形式\n    // ...mapMutations({add:'add''}),\n​\n    //数组形式\n    ...mapMutations([\"add\"]),\n  },\n")])])]),e("blockquote",[e("p",[t._v("备注：mapActions 与 mapMutations 使用时，若需要传递参数需要：在模板中绑定事件时传递好参数，否则参数是事件对象 event。")])]),t._v(" "),e("p",[e("strong",[t._v("模板中使用")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(' \n<h3>合为：{{ $store.state.sum }}</h3>\n  <button @click="add(1)">加一</button>   <button @click="addEven(1)">偶数时加一</button>\n')])])]),e("p",[e("strong",[t._v("效果")])]),t._v(" "),e("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1a66c8bcb9b14aba891a0e7bce2d0061~tplv-k3u1fbpfcp-watermark.image?",alt:"img.png",referrerpolicy:"no-referrer"}}),t._v(" "),e("h3",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),e("p",[t._v("好了，以上就是今天的所有内容，我们下期将对 Vuex 的模块化+命名空间进行讲解，希望大家能够学到一点东西！")])])}),[],!1,null,null,null);e.default=n.exports}}]);