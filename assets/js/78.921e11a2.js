(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{482:function(e,t,r){"use strict";r.r(t);var s=r(2),a=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),t("p",[e._v("完成路由的基础配置后，我们需要存储一些需要全局使用的状态（例如 token、用户 id 等），所用到的状态管理库是"),t("code",[e._v("redux")]),e._v("。")]),e._v(" "),t("h2",{attrs:{id:"redux-状态管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redux-状态管理"}},[e._v("#")]),e._v(" Redux 状态管理")]),e._v(" "),t("blockquote",[t("p",[e._v("redux 是通过 state 来存储状态，通过"),t("code",[e._v("action")]),e._v("事件来管理和更新状态。它以集中式"),t("code",[e._v("Store")]),e._v("的方式对整个应用中使用的状态进行集中管理，确保状态只能以可预测的方式更新")])]),e._v(" "),t("h3",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[e._v("#")]),e._v(" 安装")]),e._v(" "),t("p",[e._v("1.redux 官方开发工具集")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm install @reduxjs/toolkit\n")])])]),t("p",[e._v("2.redux 官方的 react 绑定库")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm install react-redux\n")])])]),t("h3",{attrs:{id:"创建切片"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建切片"}},[e._v("#")]),e._v(" 创建切片")]),e._v(" "),t("p",[e._v("首先我们先在 src 下创建文件夹"),t("code",[e._v("store")]),e._v("，我们所有的状态管理的处理都存储在这里。在其下创建一个"),t("code",[e._v("reducers")]),e._v("文件夹，用来保存模块化处理的状态切片。我们要存储用户信息、token 的状态，我们可以在 reducers 下创建一个"),t("code",[e._v("userSlice.js")]),e._v("文件表明其为用户的状态切片。")]),e._v(" "),t("p",[t("strong",[e._v("src/store/reducers/userSlice.js")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import { createSlice } from '@reduxjs/toolkit'\nimport { getToken} from '@/utils/auth'\n/**\n * 创建一个用户状态切片\n */\nconst userSlice = createSlice({\n  // 用来作为区分action的名称\n  name: 'user',\n  // 状态初始值\n  initialState: () => {\n    // 如果localStorage中有从其中取，否则为null\n    const token = getToken() || null\n    return {\n      token,\n      userinfo: { username: 'Alan' }\n    }\n  },\n  // 状态操作方法\n  reducers: {\n    setUserinfo(state, action) {\n      const { payload } = action\n      state.userinfo = payload\n    }\n  }\n})\n// 导出经过redux包装的action对象\nexport const { setUserinfo } = userSlice.actions\n// 导出切片对象\nexport default userSlice\n")])])]),t("h3",{attrs:{id:"创建-store-对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建-store-对象"}},[e._v("#")]),e._v(" 创建 store 对象")]),e._v(" "),t("p",[e._v("我们有了切片后得要封装在一个 store 对象中然后统一暴露出去，这样在其它地方就可以通过 store.xxx 来访问此切片中的状态。")]),e._v(" "),t("p",[t("strong",[e._v("src/store/index.js")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import { configureStore } from '@reduxjs/toolkit'\nimport userSlice from './reducers/userSlice'\n// 创建store对象\nconst store = configureStore({\n  reducer: {\n    user: userSlice.reducer\n  }\n})\n​\nexport default store\n")])])]),t("h2",{attrs:{id:"在-react-组件中使用-redux"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在-react-组件中使用-redux"}},[e._v("#")]),e._v(" 在 React 组件中使用 Redux")]),e._v(" "),t("p",[t("code",[e._v("react-redux")]),e._v("库主要作用就是连接"),t("code",[e._v("Redux Store")]),e._v("和 React 组件。")]),e._v(" "),t("h3",{attrs:{id:"为-react-提供-redux-store"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为-react-提供-redux-store"}},[e._v("#")]),e._v(" 为 React 提供 Redux Store")]),e._v(" "),t("p",[e._v("创建 store 后，我们可以通过在 "),t("code",[e._v("src/index.js")]),e._v(" 中的应用程序外层放置一个 React Redux "),t("code",[e._v("<Provider>")]),e._v(" 来使其对我们的 React 组件可用。导入我们刚刚创建的 Redux store，在 "),t("code",[e._v("<App>")]),e._v(" 的外层放置一个 "),t("code",[e._v("<Provider>")]),e._v("，并将 store 作为 prop 传递：")]),e._v(" "),t("p",[t("strong",[e._v("src/index.js")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport './index.scss'\n// 导入redux相关库及文件\n+ import store from './store'\n+ import { Provider } from 'react-redux'\n​\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n+ <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n+ </Provider>\n)\n")])])]),t("h3",{attrs:{id:"在-react-组件中使用-redux-state-和-actions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在-react-组件中使用-redux-state-和-actions"}},[e._v("#")]),e._v(" 在 React 组件中使用 Redux State 和 Actions")]),e._v(" "),t("p",[e._v("react-redux 为我们提供了两个钩子函数"),t("code",[e._v("useSelector")]),e._v("和"),t("code",[e._v("useDispatch")]),e._v("使得我们可以很方便地得到 state 和操作 state。")]),e._v(" "),t("p",[t("strong",[e._v("src/pages/Home")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setUserinfo } from '@/store/reducers/userSlice'\n​\nconst Home = () => {\n+  // 通过react-redux的useSelector钩子得到username\n+  const username = useSelector((state) => state.user.userinfo.username)\n+  // 分发action的钩子\n+  const dispatch = useDispatch()\n  return (\n    <div>\n      <h2>Home</h2>\n+      <h2>Username:{username}</h2>\n+      <button onClick={() => dispatch(setUserinfo({ username:\n+      'Tom' }))}>设置用户名为Tom</button>\n    </div>\n  )\n}\nexport default Home\n")])])]),t("p",[e._v("最终得到的 Home 页面如下图，点击“设置用户名为 Tom”按钮上方 Username 即变为 Tom。说明我们在 React 组件中使用 Redux State 和 Actions 成功。")]),e._v(" "),t("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8c2b79e18af244a69390075967cdf7b2~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=433&h=340&s=17035&e=png&b=fefefe",alt:"img.png",referrerpolicy:"no-referrer"}}),e._v(" "),t("h2",{attrs:{id:"代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[e._v("#")]),e._v(" 代码")]),e._v(" "),t("p",[e._v("上述实现的代码都放在"),t("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2FAlan-222%2Freact-antd5-admin",title:"https://github.com/Alan-222/react-antd5-admin",target:"_blank",rel:"noopener noreferrer"}},[e._v("react-antd5-admin"),t("OutboundLink")],1),e._v("，大家可自行查阅")])])}),[],!1,null,null,null);t.default=a.exports}}]);